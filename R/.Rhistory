source(’charger.R’)
source(’"charger.R"’)
getwd()
source
source(charger.R)
source("charger.R")
mondata <- charger(2244082)
View(mondata)
View(mondata)
sales <- mondata$Sales
price <- mondata$Price
advertising <- mondata$Advertising
region <- mondata$Region
hist(sales, breaks = 1, col = "blue", main = "Histogramme des ventes")
hist(sales, breaks = 195, col = "blue", main = "Histogramme des ventes")
hist(sales, col = "blue", main = "Histogramme des ventes", border="red", xlab="Nombre de sièges vendus (en milliers)",ylab="Nombre de Jours")
hist(sales, col = "blue", main = "Histogramme des ventes", border="red", xlab="Point de vente",ylab="Nombre de sièges vendus (en milliers)")
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Point de vente",ylab="Nombre de sièges vendus (en milliers)")
boxplot(sales, col = "green", main = "Diagramme de Tukey des ventes")
boxplot(sales, horizontal=T,xlab="Nombre de sièges vendus (en milliers)", col = "green", main = "Diagramme de Tukey des ventes")
qqnorm(sales)
qqline(sales)
hist(sales, breaks=195, col = "blue", main = "Histogramme des ventes", xlab="Point de vente",ylab="Nombre de sièges vendus (en milliers)")
qqnorm(sales, col="green",main="Droite de Henry")#, ylab="Temperature en °C", xlab="Quantiles")
qqline(sales, col="red")
qqnorm(sales, main="Droite de Henry des Ventes", ylab="Quantiles de l'échantillon", xlab="Quantiles Théoriques")
qqline(sales)
boxplot(sales, horizontal=T,xlab="Nombre de sièges vendus (en milliers)", ylab = "Distribution", col = "green", main = "Diagramme de Tukey des ventes")
shapiro.test(sales)
summary(sales)
hist(sales, breaks=195, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
sd(sales)
t.test(sales)$conf.int
hist(sales[region == 1], col="lightblue", main="Ventes pour les points de vente urbains", xlab="Ventes (en milliers)", ylab="Fréquence")
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
hist(sales[region == 1], col="lightblue", main="Ventes pour les points de vente urbains", xlab="Ventes (en milliers)", ylab="Fréquence")
hist(sales[region == 0], col="lightgreen", main="Ventes pour les points de vente ruraux", xlab="Ventes (en milliers)", ylab="Fréquence")
boxplot(sales ~ region, col=c("lightblue", "lightgreen"), main="Comparaison des ventes par région", xlab="Région", ylab="Ventes (en milliers)")
urban_stats <- data %>% filter(region == 1) %>% summarize(mean=mean(sales), q1=quantile(sales, 0.25), median=median(sales), q3=quantile(sales, 0.75), var=var(sales), sd=sd(sales))
urban_stats <- mondata %>% filter(region == 1) %>% summarize(mean=mean(sales), q1=quantile(sales, 0.25), median=median(sales), q3=quantile(sales, 0.75), var=var(sales), sd=sd(sales))
summarize(mean=mean(sales), q1=quantile(sales, 0.25), median=median(sales), q3=quantile(sales, 0.75), var=var(sales), sd=sd(sales))
mondata %>% filter(region == 1) %>% summarize(mean=mean(Y), q1=quantile(Y, 0.25), median=median(Y), q3=quantile(Y, 0.75), var=var(Y), sd=sd(Y))
summary(sales[region == 1])
sd(sales[region == 1])
var(sales[region==1])
t.test(sales[region == 1])$conf.int
summary(sales[region == 0])
sd(sales[region == 0])
var(sales[region==0])
t.test(sales[region == 0])$conf.int
var.test(sales[region == 1], sales[region == 0])
t.test(sales[region == 1], sales[region == 0])
layout(matrix(1:2,1,2)) # permet de diviser la sortie graphique en deux
hist(data$Sales[data$Region=="1"], col="grey",border="blue",
main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2))
hist(sales[region=="1"],col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2)) hist(sales[region=="1"],col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2))
hist(sales[region=="1"],col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2))
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2))
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2))
layout(matrix(1:2,1:2))
layout(matrix(1:2,1,2))
layout(matrix(1:2,1,2)) hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences") hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2)) hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
layout(matrix(1:2,1,2))
windows()
layout(matrix(1:2, 1, 2))
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences") hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences") hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")                                                                                               hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
windows()
layout(matrix(1:2, 1, 2))
hist(sales[region=="1"], col="lightblue", main=paste("Urbain"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
hist(sales[region=="0"], col="lightgreen",main=paste("Rural"),xlab="Nombre de sièges vendus en milliers",ylab="Fréquences")
source("charger.R")
mondata <- charger(2244082)
sales <- mondata$Sales
price <- mondata$Price
advertising <- mondata$Advertising
region <- mondata$Region
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
windows
windows()
windows()
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
windows()
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Nombre de sièges vendus (en milliers)",ylab="Fréquence")
View(mondata)
mondata
hist(sales, col = "blue", main = "Histogramme des ventes", xlab="Point de vente",ylab="Nombre de sièges vendus (en milliers)")
boxplot(sales, horizontal=T,xlab="Nombre de sièges vendus (en milliers)",
ylab = "Distribution", col = "green", main = "Diagramme de Tukey des ventes")
boxplot(sales, horizontal=T,xlab="Nombre de sièges vendus (en milliers)", ylab = "Distribution", col = "green", main = "Diagramme de Tukey des ventes")
window()
windows
windows()
windows()
boxplot(sales, horizontal=T,xlab="Nombre de sièges vendus (en milliers)", ylab = "Distribution", col = "green", main = "Diagramme de Tukey des ventes")
windows()
qqnorm(sales, main="Droite de Henry des Ventes", ylab="Quantiles de l'échantillon", xlab="Quantiles Théoriques")
qqline(sales)
shapiro.test(sales)
summary(sales)
sd(sales)
t.test(sales)$conf.int
var.test(sales[region == 1], sales[region == 0])
t.test(sales[region == 1], sales[region == 0])
reg1 <- lm(sales ~ price)
summary(reg1)
anova(reg1)
layout(matrix(1:4,2,2))
windows()
layout(matrix(1:4,2,2))
plot(reg1)
reg2 <- nls(sales ~ b0 * price^b1 * exp(epsilon))
reg2 <- nls(sales ~ b0 * price^b1 * exp(epsilon), start = list(b0 = 1, b1 = 0.5, epsilon = 0))
reg2 <- lm(sales ~ b0 * price^b1 * exp(epsilon), start = list(b0 = 1, b1 = 0.5, epsilon = 0))
reg2 <- lm(sales ~ b0 * price^(b1) * exp(epsilon), start = list(b0 = 1, b1 = 0.5, epsilon = 0))
shapiro.test(sales)
qf(1-alpha2,n0-1,n1-1)
alpha = 0.05
alpha2 = alpha/2
qf(1-alpha2,n0-1,n1-1)
var.test(sales[region==0],sales[region==1])
var.test(sales[region == 0], sales[region == 1])
qf(1-alpha2,0,195)
qf(1-alpha2,1,195)
qf(1-alpha2,0.7799153-1,1.7677926-1)
qf(1-alpha2,0.7799153,1.7677926)
f(1-alpha2,1,195)
qf(1-alpha2,1,195)
t.test(sales[region == 0], sales[region == 1])
qt(1-alpha2,165.09)
plot (X1,Y, main="Nuage de points du modèle 1", xlab="Prix", ylab="ventes", col="red")
plot (X1,Y, main="Nuage de points du modèle 1", xlab="Prix", ylab="ventes", col="red")
plot (X1,Y, main="Nuage de points du modèle 1", xlab="Prix", ylab="ventes", col="red")
plot (prices,sales, main="Nuage de points du modèle 1", xlab="Prix", ylab="ventes", col="red")
plot (price,sales, main="Nuage de points du modèle 1", xlab="Prix", ylab="ventes", col="red")
plot (price,sales, main="Nuage de points du modèle 1", xlab="Prix", ylab="ventes", col="red")
abline (reg1, col="blue")
plot (price,sales, main="Nuage de points du modèle 1", xlab="Prix", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg1, col="blue")
plot (price,sales, main="Nuage de points du modèle 1", xlab="Prix", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg1, col="blue")
par (mfrow=c(2,2))
plot (reg1)
confint (reg1)
confint (reg1)
reg2 <- lm(log(sales)~log(price))
summary(reg2)
anova (reg2)
par (mfrow=c(1,1))
plot (log(price), log(sales), main="Nuage de points du modèle 2", xlab="Prix", ylab="Nombre de sièges vendus en milliers", col="red") abline (reg2, col="blue")
plot (log(price), log(sales), main="Nuage de points du modèle 2", xlab="Prix", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg2, col="blue")
par (mfrow=c(2,2))
plot (reg2, col="purple")
windows() par (mfrow=c(2,2))
windows()
par (mfrow=c(2,2))
plot (reg2, col="purple")
confint (reg2)
reg3 <- lm(log(sales)~price)
summary(reg3)
anova(reg3)
par (mfrow=c(1,1))
plot (X1, log(Y), main="Nuage de points du modèle 3", xlab="Prix", ylab="Nombre de sièges vendus en milliers", col="red")
par (mfrow=c(1,1))
plot (price, log(sales), main="Nuage de points du modèle 3", xlab="Prix", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg3, col="blue")
par (mfrow=c(2,2))
plot (reg3, col="purple")
confint (reg3)
reg4 < lm(sales~advertising)
reg4 <- lm(sales~advertising)
summary(reg4)
summary(reg4)
anova (reg4)
anova (reg4)
par (mfrow=c(1,1))
plot (X2,Y, main="Nuage de points du modèle 4", xlab="Publicité", ylab="ventes", col="red")
par (mfrow=c(1,1))
plot (advertising,sales, main="Nuage de points du modèle 4", xlab="Publicité", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg4, col="blue")
par (mfrow=c(2,2))
plot (reg4, col="purple")
windows
windows()
par (mfrow=c(2,2))
plot (reg4, col="purple")
windows()
par (mfrow=c(2,2))
plot (reg3, col="purple")
confint (reg4)
reg5 <- lm(log(sales)~log(8+advertising))
summary(reg5)
summary(reg5)
anova (reg5)
windows()
par (mfrow=c(1,1))
plot (log(8+advertising),log(sales), main="Nuage de points du modèle 5", xlab="Publicité", ylab="ventes", col="red") abline (reg5, col="blue")
windows()
par (mfrow=c(1,1))
plot (log(8+advertising),log(sales), main="Nuage de points du modèle 5", xlab="Publicité", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg5, col="blue")
windows()
par (mfrow=c(2,2))
plot (reg5, col="purple")
confint (reg5)
windows()
par (mfrow=c(1,1))
plot (advertising, log (sales), main="Nuage de points du modèle 6", xlab="Publicité", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg6, col="blue")
reg6 <- lm(log(sales)~advertising)
summary(reg6)
summary(reg6)
anova (reg6)
windows()
par (mfrow=c(1,1))
plot (advertising, log (sales), main="Nuage de points du modèle 6", xlab="Publicité", ylab="Nombre de sièges vendus en milliers", col="red")
abline (reg6, col="blue")
windows()
par (mfrow=c(2,2))
plot (reg6, col="purple")
confint (reg6)
interprev <- data.frame(price=118, advertising=12, region=0)
predict(reg1, interprev, interval="prediction")
